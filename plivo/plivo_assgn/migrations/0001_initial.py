# Generated by Django 2.1.7 on 2019-02-16 05:29

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='update_on')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('name', models.CharField(default='unsaved', max_length=255)),
                ('email_address', models.CharField(max_length=255, unique=True)),
                ('primary_contact_of', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_index=True, null=True, verbose_name='update_on')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='deleted')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
